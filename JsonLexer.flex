%%

%public
%class JsonLexer
%unicode
%line
%column
%type int
%{
/******************************************************
 * JsonLexer - generated by JFlex                     *
 *                                                    *
 * For each recognized token it prints:               *
 *   TOKEN\tLEXEME\tLINE                              *
 ******************************************************/
private int currentLine = 1;

private void emit(String token){
    System.out.printf("%-10s %-40s %d%n", token, yytext(), currentLine);
}

public static void main(String[] args) throws Exception {
    java.io.Reader reader;
    if (args.length > 0) {
        reader = new java.io.FileReader(args[0]);
    } else {
        reader = new java.io.InputStreamReader(System.in);
    }
    JsonLexer lexer = new JsonLexer(reader);
    int token;
    while ((token = lexer.yylex()) != YYEOF) {
        // printing already done in emit()
    }
}

%}

%%

\n                        { currentLine++; }
[\t\r\f ]+              { /* skip whitespace */ }

"{"                      { emit("LBRACE");   return 1; }
"}"                      { emit("RBRACE");   return 1; }
"["                      { emit("LBRACKET"); return 1; }
"]"                      { emit("RBRACKET"); return 1; }
":"                      { emit("COLON");    return 1; }
","                      { emit("COMMA");    return 1; }

"true"|"false"|"null"     { emit("LITERAL"); return 1; }

"\"([^\"\n\\]|\\[\"\\/bfnrt]|\\u[0-9a-fA-F]{4})*\""    { emit("STRING"); return 1; }

-?(0|[1-9][0-9]*)(\.[0-9]+)?([eE][+-]?[0-9]+)?   { emit("NUMBER");  return 1; }

.                         { emit("UNKNOWN"); return 1; }
