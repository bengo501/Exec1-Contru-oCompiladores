%%

%public
%class EvalLexer
%unicode
%line
%column
%type int
%{
/******************************************************
 * EvalLexer - generated by JFlex                     *
 *                                                    *
 * Prints TOKEN\tLEXEME\tLINE for each token.          *
 ******************************************************/
private int currentLine = 1;
private void emit(String token){
    System.out.printf("%-10s %-20s %d%n", token, yytext(), currentLine);
}

public static void main(String[] args) throws Exception {
    java.io.Reader reader;
    if (args.length > 0) {
        reader = new java.io.FileReader(args[0]);
    } else {
        reader = new java.io.InputStreamReader(System.in);
    }
    EvalLexer lexer = new EvalLexer(reader);
    int token;
    while ((token = lexer.yylex()) != YYEOF) {
        // printing handled by emit()
    }
}

%}

%%

\n                       { currentLine++; }
[\t\r\f ]+             { /* skip whitespace */ }

","                      { emit("COMMA");   return 1; }
"("                      { emit("LPAREN");  return 1; }
")"                      { emit("RPAREN");  return 1; }
"*"|"/"|"+"|"-"           { emit("OP");      return 1; }

[0-9]+                   { emit("INT");     return 1; }
[0-9]+\.[0-9]+           { emit("FLOAT");   return 1; }

[A-Za-z][A-Za-z0-9]?     { emit("NAME");    return 1; }

.                        { emit("UNKNOWN"); return 1; }
